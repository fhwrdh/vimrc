snippet warn "logger.warn"
logger.warn(\`${2:$1}: \$\{${1}\}\`);
endsnippet

snippet db "debug(...)"
debug('${2:$1: }', ${1});
endsnippet

snippet dbb "debug(...)"
debug('${1}');
endsnippet

snippet cll "console.log"
console.log('${1}');
endsnippet

snippet clt "console.log template string"
console.log(\`\$\{$1\}\`);
endsnippet

snippet il "import named local"
import {${1}} from '${2:./}${3:$1}';
endsnippet

snippet inm "import node module"
import ${1} from '${2:$1}';
endsnippet

snippet ipt "import PropTypes"
import PropTypes from 'prop-types';
endsnippet

snippet react "import react"
import React from 'react';
endsnippet

snippet irr "import react"
import React from 'react';
endsnippet

snippet isc "import styled-components/macro"
import styled from "styled-components/macro"; // eslint-disable-line no-unused-vars
endsnippet

snippet nuv "eslint-disable-line"
// eslint-disable-line no-unused-vars
endsnippet

snippet iss "import styled-system"
import { $0 } from 'styled-system';
endsnippet

snippet ist "import styled-tools"
import { $0 } from 'styled-tools';
endsnippet

snippet irtl "import @testing-library/react"
import { render } from '@testing-library/react';
endsnippet

snippet iram "import ramda"
import * as R from 'ramda';
endsnippet

snippet rff "react functional component"
const $1 = ${2:()} => {
  return (
    $0
  );
}
${4:$1}.propTypes = {
};

endsnippet

snippet rsf "react s-c func"
import React from 'react';
import styled from 'styled-components';

export const ${1} = ${2:()} => {
  return (
    ${3}
  );
}

endsnippet

snippet scd "s-c div"
const ${1:Component} = styled.${2:div}\`
  ${0:styles}
\`;
endsnippet

snippet desc "test describe block"
describe('${1:<Component/>}', () => {
  it('should $2', () => {
	$0
  });
});
endsnippet

snippet it "test block"
it('should $1', () => {
  //
  $0
});
endsnippet

snippet bg "background"
background: ${1:yellow};
endsnippet

snippet bd "border"
border: 1px solid ${1:black};
endsnippet

snippet ue "useEffect"
useEffect(() => {
  $0
}, [$1]);
endsnippet
